schema {
  query: RootQueryType
  mutation: RootMutationType
  subscription: RootSubscriptionType
}

"""
A directive used by the Apollo iOS client to annotate operations or fragments that should be used exclusively for generating local cache mutations instead of as standard operations.
"""
directive @apollo_client_ios_localCacheMutation on QUERY | MUTATION | SUBSCRIPTION | FRAGMENT_DEFINITION

"""
Directs the executor to defer this fragment when the `if` argument is true or undefined.
"""
directive @defer(
  """Deferred when true or undefined."""
  if: Boolean

  """Unique name"""
  label: String
) on FRAGMENT_SPREAD | INLINE_FRAGMENT

""""""
input MessageInput {
  """"""
  Type: MessageType

  """"""
  Text: String

  """"""
  ReplyMessage: ReplyMessageInput
}

""""""
type RootSubscriptionType {
  """"""
  SubscribeChat(RoomId: String!): InteractiveAction

  """"""
  SubscribeMediaInfo(RoomId: String): MediaInfo
}

""""""
type User {
  """"""
  Avatar: String

  """"""
  Email: String

  """"""
  Id: String

  """"""
  Login: String
}

""""""
type InteractiveAction {
  """"""
  Message: [Message]

  """"""
  RoomReaction: Int
}

""""""
input ReplyMessageInput {
  """"""
  Type: MessageType

  """"""
  Text: String

  """"""
  UserName: String

  """"""
  Id: String
}

""""""
type RootQueryType {
  """"""
  CurrentUser: User

  """"""
  GetLastMessages(RoomId: String!): InteractiveAction

  """"""
  GetMediaInfo(RoomId: String): MediaInfo

  """"""
  GetOwnSources: [PlaylistRow]

  """"""
  GetPaginatedRooms(Page: Int = 1, PageSize: Int = 10): PaginatedRooms

  """"""
  GetPaginatedSources: [PlaylistRow]

  """"""
  GetRoom(RoomId: String!): Room

  """"""
  GetRoomByKey(Key: String!): Room

  """"""
  GetRoomPlaylist(RoomId: String!): [PlaylistRow]
}

""""""
type Source {
  """"""
  Cover: String

  """"""
  CurrentUrl: String

  """"""
  Id: String

  """"""
  Name: String

  """"""
  Url: String
}

""""""
enum MediaAction {
  """"""
  PAUSE

  """"""
  MOVE

  """"""
  CHANGE_SOURCE

  """"""
  PLAY
}

""""""
type ReactionMessage {
  """"""
  From: User

  """"""
  Reaction: String
}

""""""
type RootMutationType {
  """"""
  AddPlaylistSource(RoomId: String!, Url: String!): [PlaylistRow]

  """"""
  CreateRoom(Private: Boolean, Type: RoomType, Name: String!, Image: String): Room

  """"""
  DeletePlaylistSource(RoomId: String!, PlaylistRowId: String!): [PlaylistRow]

  """"""
  DeleteRoom(RoomId: String!): Room

  """"""
  HideMessage(RoomId: String!, MessageId: String!): Boolean

  """"""
  MovePlaylistSourcePosition(PlaylistRowId: String!, Position: Int!, RoomId: String!): [PlaylistRow]

  """"""
  RoomAction(RoomId: String, Action: MediaAction, Arg: String): Boolean

  """"""
  SendMessage(Message: MessageInput!, RoomId: String!): Boolean

  """"""
  SendReaction(RoomId: String!, Reaction: String!): Boolean

  """"""
  SendRoomReaction(RoomId: String!): Int

  """"""
  SignIn(Email: String!, Password: String!): Token

  """"""
  SignUp(Login: String!, Password: String!, Email: String!): Token

  """"""
  UpdateCurrentUser(Avatar: String, Login: String): User

  """"""
  UpdateRoom(RoomId: String!, Name: String!, Image: String, Private: Boolean, Type: RoomType): Room
}

""""""
type MediaInfo {
  """"""
  CurrentTimeSeconds: Float

  """"""
  DurationSeconds: Float

  """"""
  MediaAction: MediaAction

  """"""
  Play: Boolean

  """"""
  RoomId: String

  """"""
  Source: Source

  """"""
  SourceId: String
}

""""""
enum MessageType {
  """"""
  joined

  """"""
  leaving

  """"""
  message

  """"""
  sticker

  """"""
  hidden
}

""""""
type ReplyMessage {
  """"""
  Id: String

  """"""
  Text: String

  """"""
  UserName: String
}

""""""
type Room {
  """"""
  Id: String

  """"""
  Image: String

  """"""
  Key: String

  """"""
  Likes: Int

  """"""
  MediaInfo: MediaInfo

  """"""
  Name: String

  """"""
  Owner: User

  """"""
  Private: Boolean

  """"""
  Type: RoomType
}

""""""
type PaginatedRooms {
  """"""
  Entries: [Room]

  """"""
  Page: Int

  """"""
  PageCount: Int

  """"""
  PageSize: Int

  """"""
  TotalCount: Int

  """"""
  TotalPages: Int
}

""""""
type Token {
  """"""
  Token: String!
}

""""""
enum RoomType {
  """"""
  NO_TYPE

  """"""
  SINGLE

  """"""
  PLAYLIST
}

""""""
type PlaylistRow {
  """"""
  Id: String

  """"""
  Index: Int

  """"""
  RoomId: String

  """"""
  Source: Source

  """"""
  SourceId: String
}

""""""
type Message {
  """"""
  From: User

  """"""
  Id: String

  """"""
  Reactions: [ReactionMessage]

  """"""
  ReplyMessage: ReplyMessage

  """"""
  Text: String

  """"""
  Type: MessageType
}